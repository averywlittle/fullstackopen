{"ast":null,"code":"import blogService from '../services/blogs'; // Logic where we update state\n// Must be pure functions\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT':\n      {\n        return action.data;\n      }\n\n    case 'ADD':\n      {\n        return state.concat(action.data);\n      }\n\n    case 'LIKE':\n      {\n        const id = action.data.id;\n        const changedBlog = action.data;\n        return state.map(blog => blog.id !== id ? blog : changedBlog);\n      }\n\n    case 'REMOVE':\n      {\n        const id = action.data;\n        return state.filter(blog => blog.id !== id);\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const initUser = () => {\n  return async dispatch => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n\n    dispatch({\n      type: 'LIKE',\n      data: updatedBlog\n    });\n  };\n};\nexport default reducer;","map":{"version":3,"sources":["/home/averywlittle/code/fullstackopen/part7/bloglist/client/src/reducers/userReducer.js"],"names":["blogService","reducer","state","action","type","data","concat","id","changedBlog","map","blog","filter","initUser","dispatch","loggedUserJSON","window","localStorage","getItem","user","JSON","parse","setUser","setToken","token","updatedBlog"],"mappings":"AACA,OAAOA,WAAP,MAAwB,mBAAxB,C,CAIA;AACA;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACpC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,MAAL;AAAa;AACT,eAAOD,MAAM,CAACE,IAAd;AACH;;AACD,SAAK,KAAL;AAAY;AACR,eAAOH,KAAK,CAACI,MAAN,CAAaH,MAAM,CAACE,IAApB,CAAP;AACH;;AACD,SAAK,MAAL;AAAa;AACT,cAAME,EAAE,GAAGJ,MAAM,CAACE,IAAP,CAAYE,EAAvB;AACA,cAAMC,WAAW,GAAGL,MAAM,CAACE,IAA3B;AACA,eAAOH,KAAK,CAACO,GAAN,CAAUC,IAAI,IACjBA,IAAI,CAACH,EAAL,KAAYA,EAAZ,GAAiBG,IAAjB,GAAwBF,WADrB,CAAP;AAGH;;AACD,SAAK,QAAL;AAAe;AACX,cAAMD,EAAE,GAAGJ,MAAM,CAACE,IAAlB;AACA,eAAOH,KAAK,CAACS,MAAN,CAAaD,IAAI,IAAIA,IAAI,CAACH,EAAL,KAAYA,EAAjC,CAAP;AACH;;AACD;AAAS,aAAOL,KAAP;AAlBb;AAoBH,CArBD;;AAuBA,OAAO,MAAMU,QAAQ,GAAG,MAAM;AAE1B,SAAO,MAAMC,QAAN,IAAkB;AACrB,UAAMC,cAAc,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,mBAA5B,CAAvB;;AACA,QAAIH,cAAJ,EAAoB;AAChB,YAAMI,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWN,cAAX,CAAb;AACAO,MAAAA,OAAO,CAACH,IAAD,CAAP;AACAlB,MAAAA,WAAW,CAACsB,QAAZ,CAAqBJ,IAAI,CAACK,KAA1B;AACH;;AACDV,IAAAA,QAAQ,CAAC;AACLT,MAAAA,IAAI,EAAE,MADD;AAELC,MAAAA,IAAI,EAAEmB;AAFD,KAAD,CAAR;AAIH,GAXD;AAYH,CAdM;AAgBP,eAAevB,OAAf","sourcesContent":["\nimport blogService from '../services/blogs'\n\n\n\n// Logic where we update state\n// Must be pure functions\nconst reducer = (state = [], action) => {\n    switch (action.type) {\n        case 'INIT': {\n            return action.data\n        }\n        case 'ADD': {\n            return state.concat(action.data)\n        }\n        case 'LIKE': {\n            const id = action.data.id\n            const changedBlog = action.data\n            return state.map(blog =>\n                blog.id !== id ? blog : changedBlog\n            )\n        }\n        case 'REMOVE': {\n            const id = action.data\n            return state.filter(blog => blog.id !== id)\n        }\n        default: return state\n    }\n}\n\nexport const initUser = () => {\n\n    return async dispatch => {\n        const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n        if (loggedUserJSON) {\n            const user = JSON.parse(loggedUserJSON)\n            setUser(user)\n            blogService.setToken(user.token)\n        }\n        dispatch({\n            type: 'LIKE',\n            data: updatedBlog\n        })\n    }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import blogService from '../services/blogs'; // Logic where we update state\n// Must be pure functions\n\nconst reducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT':\n      {\n        return action.data;\n      }\n\n    case 'LOGOUT':\n      {\n        return null;\n      }\n\n    case 'LOGIN':\n      {\n        return action.data;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const initUser = () => {\n  return async dispatch => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      blogService.setToken(user.token);\n      dispatch({\n        type: 'INIT',\n        data: user\n      });\n    }\n  };\n};\nexport const loginUser = () => {\n  return async dispatch => {\n    const user = await loginService.login({\n      username,\n      password\n    });\n\n    if (user) {\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      dispatch({\n        type: 'LOGIN',\n        data: user\n      });\n    }\n  };\n};\nexport const logoutUser = () => {\n  return async dispatch => {\n    window.localStorage.removeItem('loggedBlogappUser');\n    dispatch({\n      type: 'LOGOUT',\n      data: null\n    });\n  };\n};\nexport default reducer;","map":{"version":3,"sources":["/home/averywlittle/code/fullstackopen/part7/bloglist/client/src/reducers/userReducer.js"],"names":["blogService","reducer","state","action","type","data","initUser","dispatch","loggedUserJSON","window","localStorage","getItem","user","JSON","parse","setToken","token","loginUser","loginService","login","username","password","setItem","stringify","logoutUser","removeItem"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,mBAAxB,C,CAEA;AACA;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACpC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,MAAL;AAAa;AACT,eAAOD,MAAM,CAACE,IAAd;AACH;;AACD,SAAK,QAAL;AAAe;AACX,eAAO,IAAP;AACH;;AACD,SAAK,OAAL;AAAc;AACV,eAAOF,MAAM,CAACE,IAAd;AACH;;AACD;AAAS,aAAOH,KAAP;AAVb;AAYH,CAbD;;AAeA,OAAO,MAAMI,QAAQ,GAAG,MAAM;AAE1B,SAAO,MAAMC,QAAN,IAAkB;AACrB,UAAMC,cAAc,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,mBAA5B,CAAvB;;AACA,QAAIH,cAAJ,EAAoB;AAChB,YAAMI,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWN,cAAX,CAAb;AACAR,MAAAA,WAAW,CAACe,QAAZ,CAAqBH,IAAI,CAACI,KAA1B;AACAT,MAAAA,QAAQ,CAAC;AACLH,QAAAA,IAAI,EAAE,MADD;AAELC,QAAAA,IAAI,EAAEO;AAFD,OAAD,CAAR;AAIH;AACJ,GAVD;AAWH,CAbM;AAeP,OAAO,MAAMK,SAAS,GAAG,MAAM;AAE3B,SAAO,MAAMV,QAAN,IAAkB;AACrB,UAAMK,IAAI,GAAG,MAAMM,YAAY,CAACC,KAAb,CAAmB;AAClCC,MAAAA,QADkC;AACxBC,MAAAA;AADwB,KAAnB,CAAnB;;AAIA,QAAIT,IAAJ,EAAU;AACNH,MAAAA,MAAM,CAACC,YAAP,CAAoBY,OAApB,CACI,mBADJ,EACyBT,IAAI,CAACU,SAAL,CAAeX,IAAf,CADzB;AAGAZ,MAAAA,WAAW,CAACe,QAAZ,CAAqBH,IAAI,CAACI,KAA1B;AACAT,MAAAA,QAAQ,CAAC;AACLH,QAAAA,IAAI,EAAE,OADD;AAELC,QAAAA,IAAI,EAAEO;AAFD,OAAD,CAAR;AAIH;AACJ,GAfD;AAgBH,CAlBM;AAoBP,OAAO,MAAMY,UAAU,GAAG,MAAM;AAE5B,SAAO,MAAMjB,QAAN,IAAkB;AACrBE,IAAAA,MAAM,CAACC,YAAP,CAAoBe,UAApB,CAA+B,mBAA/B;AACAlB,IAAAA,QAAQ,CAAC;AACLH,MAAAA,IAAI,EAAE,QADD;AAELC,MAAAA,IAAI,EAAE;AAFD,KAAD,CAAR;AAIH,GAND;AAOH,CATM;AAWP,eAAeJ,OAAf","sourcesContent":["import blogService from '../services/blogs'\n\n// Logic where we update state\n// Must be pure functions\nconst reducer = (state = [], action) => {\n    switch (action.type) {\n        case 'INIT': {\n            return action.data\n        }\n        case 'LOGOUT': {\n            return null\n        }\n        case 'LOGIN': {\n            return action.data\n        }\n        default: return state\n    }\n}\n\nexport const initUser = () => {\n\n    return async dispatch => {\n        const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n        if (loggedUserJSON) {\n            const user = JSON.parse(loggedUserJSON)\n            blogService.setToken(user.token)\n            dispatch({\n                type: 'INIT',\n                data: user\n            })\n        }\n    }\n}\n\nexport const loginUser = () => {\n\n    return async dispatch => {\n        const user = await loginService.login({\n            username, password\n        })\n\n        if (user) {\n            window.localStorage.setItem(\n                'loggedBlogappUser', JSON.stringify(user)\n            )\n            blogService.setToken(user.token)\n            dispatch({\n                type: 'LOGIN',\n                data: user\n            })\n        }\n    }\n}\n\nexport const logoutUser = () => {\n\n    return async dispatch => {\n        window.localStorage.removeItem('loggedBlogappUser')\n        dispatch({\n            type: 'LOGOUT',\n            data: null\n        })\n    }\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AveryLittle\\\\code\\\\fullstackopen\\\\part5\\\\bloglist-frontend\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport Login from './components/Login';\nimport BlogForm from './components/BlogForm';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [user, setUser] = useState(null);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [blogFormVisible, setBlogFormVisible] = useState(false);\n  useEffect(() => {\n    blogService.getAll().then(blogs => setBlogs(blogs));\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user));\n      blogService.setToken(user.token);\n      setUser(user);\n      console.log('user', user);\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      console.error('login exception', exception);\n    }\n  };\n\n  const handleLogout = () => {\n    setUser(null);\n    window.localStorage.removeItem('loggedBlogappUser');\n  };\n\n  const handleUsername = username => {\n    setUsername(username);\n  };\n\n  const handlePassword = password => {\n    setPassword(password);\n  };\n\n  const likeBlog = async blog => {\n    try {\n      const newBlog = {\n        user: blog.user,\n        title: blog.title,\n        author: blog.author,\n        url: blog.url,\n        likes: blog.likes + 1\n      };\n      const savedBlog = await blogService.update(newBlog, blog.id);\n\n      if (savedBlog) {\n        console.log('blog like', savedBlog);\n        let newBlogList = [...blogs];\n        let index = newBlogList.findIndex(blog => {\n          blog.id === savedBlog.id ? true : false;\n        });\n\n        if (index !== -1) {\n          newBlogList[index] = savedBlog;\n          setBlogs(newBlogList);\n        }\n      }\n    } catch (exception) {\n      console.error('like blog exception', exception);\n    }\n  };\n\n  const blogData = () => {\n    const hideWhenVisible = {\n      display: blogFormVisible ? 'none' : ''\n    };\n    const showWhenVisible = {\n      display: blogFormVisible ? '' : 'none'\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, user.name, \" logged in\"), React.createElement(\"button\", {\n      onClick: () => handleLogout(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"logout\"), React.createElement(\"div\", {\n      style: hideWhenVisible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => setBlogFormVisible(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"add blog\")), React.createElement(\"div\", {\n      style: showWhenVisible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(BlogForm, {\n      blogs: blogs,\n      setBlogs: setBlogs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: () => setBlogFormVisible(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"cancel\")), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"blogs\"), blogs.sort((a, b) => b.likes - a.likes).map(blog => React.createElement(Blog, {\n      key: blog.id,\n      blog: blog,\n      user: user.name,\n      likeBlog: likeBlog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, user === null && React.createElement(Login, {\n    username: username,\n    password: password,\n    handleLogin: handleLogin,\n    handleUsername: handleUsername,\n    handlePassword: handlePassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), user !== null && blogData());\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/AveryLittle/code/fullstackopen/part5/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","Blog","Login","BlogForm","blogService","loginService","App","blogs","setBlogs","user","setUser","username","setUsername","password","setPassword","blogFormVisible","setBlogFormVisible","getAll","then","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","handleLogin","event","preventDefault","login","setItem","stringify","console","log","exception","error","handleLogout","removeItem","handleUsername","handlePassword","likeBlog","blog","newBlog","title","author","url","likes","savedBlog","update","id","newBlogList","index","findIndex","blogData","hideWhenVisible","display","showWhenVisible","name","sort","a","b","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgB,eAAD,EAAkBC,kBAAlB,IAAwCjB,QAAQ,CAAC,KAAD,CAAtD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,WAAW,CAACa,MAAZ,GAAqBC,IAArB,CAA0BX,KAAK,IAC7BC,QAAQ,CAAED,KAAF,CADV;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,cAAc,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,mBAA5B,CAAvB;;AACA,QAAIH,cAAJ,EAAoB;AAClB,YAAMV,IAAI,GAAGc,IAAI,CAACC,KAAL,CAAWL,cAAX,CAAb;AACAT,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAL,MAAAA,WAAW,CAACqB,QAAZ,CAAqBhB,IAAI,CAACiB,KAA1B;AACD;AACF,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMC,WAAW,GAAG,MAAOC,KAAP,IAAiB;AACnCA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAI;AACF,YAAMpB,IAAI,GAAG,MAAMJ,YAAY,CAACyB,KAAb,CAAmB;AACpCnB,QAAAA,QADoC;AAC1BE,QAAAA;AAD0B,OAAnB,CAAnB;AAIAO,MAAAA,MAAM,CAACC,YAAP,CAAoBU,OAApB,CACE,mBADF,EACuBR,IAAI,CAACS,SAAL,CAAevB,IAAf,CADvB;AAGAL,MAAAA,WAAW,CAACqB,QAAZ,CAAqBhB,IAAI,CAACiB,KAA1B;AACAhB,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAwB,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBzB,IAApB;AACAG,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD,KAbD,CAaE,OAAOqB,SAAP,EAAkB;AAClBF,MAAAA,OAAO,CAACG,KAAR,CAAc,iBAAd,EAAiCD,SAAjC;AACD;AACF,GAlBD;;AAoBA,QAAME,YAAY,GAAG,MAAM;AACzB3B,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAU,IAAAA,MAAM,CAACC,YAAP,CAAoBiB,UAApB,CAA+B,mBAA/B;AACD,GAHD;;AAKA,QAAMC,cAAc,GAAI5B,QAAD,IAAc;AACnCC,IAAAA,WAAW,CAACD,QAAD,CAAX;AACD,GAFD;;AAIA,QAAM6B,cAAc,GAAI3B,QAAD,IAAc;AACnCC,IAAAA,WAAW,CAACD,QAAD,CAAX;AACD,GAFD;;AAIA,QAAM4B,QAAQ,GAAG,MAAOC,IAAP,IAAgB;AAC/B,QAAI;AACF,YAAMC,OAAO,GAAG;AACdlC,QAAAA,IAAI,EAAEiC,IAAI,CAACjC,IADG;AAEdmC,QAAAA,KAAK,EAAEF,IAAI,CAACE,KAFE;AAGdC,QAAAA,MAAM,EAAEH,IAAI,CAACG,MAHC;AAIdC,QAAAA,GAAG,EAAEJ,IAAI,CAACI,GAJI;AAKdC,QAAAA,KAAK,EAAEL,IAAI,CAACK,KAAL,GAAa;AALN,OAAhB;AAQA,YAAMC,SAAS,GAAG,MAAM5C,WAAW,CAAC6C,MAAZ,CAAmBN,OAAnB,EAA4BD,IAAI,CAACQ,EAAjC,CAAxB;;AACA,UAAIF,SAAJ,EAAe;AACbf,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBc,SAAzB;AACA,YAAIG,WAAW,GAAG,CAAC,GAAG5C,KAAJ,CAAlB;AACA,YAAI6C,KAAK,GAAGD,WAAW,CAACE,SAAZ,CAAuBX,IAAD,IAAU;AAAEA,UAAAA,IAAI,CAACQ,EAAL,KAAYF,SAAS,CAACE,EAAtB,GAA2B,IAA3B,GAAkC,KAAlC;AAAyC,SAA3E,CAAZ;;AAEA,YAAIE,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBD,UAAAA,WAAW,CAACC,KAAD,CAAX,GAAqBJ,SAArB;AACAxC,UAAAA,QAAQ,CAAC2C,WAAD,CAAR;AACD;AACF;AAEF,KArBD,CAqBE,OAAOhB,SAAP,EAAkB;AAClBF,MAAAA,OAAO,CAACG,KAAR,CAAc,qBAAd,EAAqCD,SAArC;AACD;AACF,GAzBD;;AA2BA,QAAMmB,QAAQ,GAAG,MAAM;AACrB,UAAMC,eAAe,GAAG;AAAEC,MAAAA,OAAO,EAAEzC,eAAe,GAAG,MAAH,GAAY;AAAtC,KAAxB;AACA,UAAM0C,eAAe,GAAG;AAAED,MAAAA,OAAO,EAAEzC,eAAe,GAAG,EAAH,GAAQ;AAAlC,KAAxB;AAEA,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIN,IAAI,CAACiD,IAAT,eADF,EAC8B;AAAQ,MAAA,OAAO,EAAE,MAAMrB,YAAY,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAD9B,EAGE;AAAK,MAAA,KAAK,EAAEkB,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,MAAMvC,kBAAkB,CAAC,IAAD,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAHF,EAOE;AAAK,MAAA,KAAK,EAAEyC,eAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAElD,KAAjB;AAAwB,MAAA,QAAQ,EAAEC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAQ,MAAA,OAAO,EAAE,MAAMQ,kBAAkB,CAAC,KAAD,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CAPF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAXF,EAYKT,KAAK,CAACoD,IAAN,CAAW,CAACC,CAAD,EAAIC,CAAJ,KAAUA,CAAC,CAACd,KAAF,GAAUa,CAAC,CAACb,KAAjC,EAAwCe,GAAxC,CAA4CpB,IAAI,IAC/C,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACQ,EAAhB;AAAoB,MAAA,IAAI,EAAER,IAA1B;AAAgC,MAAA,IAAI,EAAEjC,IAAI,CAACiD,IAA3C;AAAiD,MAAA,QAAQ,EAAEjB,QAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAZL,CADA;AAkBD,GAtBD;;AAwBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhC,IAAI,KAAK,IAAT,IAAiB,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAEE,QAAjB;AAA2B,IAAA,QAAQ,EAAEE,QAArC;AAA+C,IAAA,WAAW,EAAEc,WAA5D;AAAyE,IAAA,cAAc,EAAEY,cAAzF;AAAyG,IAAA,cAAc,EAAEC,cAAzH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADpB,EAEG/B,IAAI,KAAK,IAAT,IAAiB6C,QAAQ,EAF5B,CADF;AAMD,CAhHD;;AAkHA,eAAehD,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Blog from './components/Blog'\r\nimport Login from './components/Login'\r\nimport BlogForm from './components/BlogForm'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\n\r\nconst App = () => {\r\n  const [blogs, setBlogs] = useState([])\r\n  const [user, setUser] = useState(null)\r\n  const [username, setUsername] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [blogFormVisible, setBlogFormVisible] = useState(false)\r\n\r\n  useEffect(() => {\r\n    blogService.getAll().then(blogs =>\r\n      setBlogs( blogs )\r\n    )  \r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\r\n    if (loggedUserJSON) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      setUser(user)\r\n      blogService.setToken(user.token)\r\n    }\r\n  }, [])\r\n\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      const user = await loginService.login({\r\n        username, password\r\n      })\r\n\r\n      window.localStorage.setItem(\r\n        'loggedBlogappUser', JSON.stringify(user)\r\n      )\r\n      blogService.setToken(user.token)\r\n      setUser(user)\r\n      console.log('user', user)\r\n      setUsername('')\r\n      setPassword('')\r\n    } catch (exception) {\r\n      console.error('login exception', exception)\r\n    }\r\n  }\r\n\r\n  const handleLogout = () => {\r\n    setUser(null)\r\n    window.localStorage.removeItem('loggedBlogappUser')\r\n  }\r\n\r\n  const handleUsername = (username) => {\r\n    setUsername(username)\r\n  }\r\n\r\n  const handlePassword = (password) => {\r\n    setPassword(password)\r\n  }\r\n\r\n  const likeBlog = async (blog) => {\r\n    try {\r\n      const newBlog = {\r\n        user: blog.user,\r\n        title: blog.title,\r\n        author: blog.author,\r\n        url: blog.url,\r\n        likes: blog.likes + 1\r\n      }\r\n  \r\n      const savedBlog = await blogService.update(newBlog, blog.id)\r\n      if (savedBlog) {\r\n        console.log('blog like', savedBlog)\r\n        let newBlogList = [...blogs]\r\n        let index = newBlogList.findIndex((blog) => { blog.id === savedBlog.id ? true : false })\r\n\r\n        if (index !== -1) {\r\n          newBlogList[index] = savedBlog\r\n          setBlogs(newBlogList)\r\n        }\r\n      }\r\n  \r\n    } catch (exception) {\r\n      console.error('like blog exception', exception)\r\n    }\r\n  }\r\n\r\n  const blogData = () => {\r\n    const hideWhenVisible = { display: blogFormVisible ? 'none' : '' }\r\n    const showWhenVisible = { display: blogFormVisible ? '' : 'none'}\r\n    \r\n    return (\r\n    <div>\r\n      <p>{user.name} logged in</p><button onClick={() => handleLogout()}>logout</button>\r\n      \r\n      <div style={hideWhenVisible}>\r\n        <button onClick={() => setBlogFormVisible(true)}>add blog</button>\r\n      </div>\r\n\r\n      <div style={showWhenVisible}>\r\n        <BlogForm blogs={blogs} setBlogs={setBlogs}/>\r\n        <button onClick={() => setBlogFormVisible(false)}>cancel</button>\r\n      </div>\r\n      <h2>blogs</h2>\r\n        {blogs.sort((a, b) => b.likes - a.likes).map(blog =>\r\n          <Blog key={blog.id} blog={blog} user={user.name} likeBlog={likeBlog}/>\r\n        )}\r\n    </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {user === null && <Login username={username} password={password} handleLogin={handleLogin} handleUsername={handleUsername} handlePassword={handlePassword}/>}\r\n      {user !== null && blogData()}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"]},"metadata":{},"sourceType":"module"}